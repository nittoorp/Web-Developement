{"filter":false,"title":"campgrounds.js","tooltip":"/YelpCamp/v11/routes/campgrounds.js","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":0,"column":0},"end":{"row":94,"column":0},"action":"remove","lines":["var express = require(\"express\");","var router  = express.Router();","var Campground = require(\"../models/campground\");","var middleware = require(\"../middleware\");","","","//INDEX - show all campgrounds","router.get(\"/\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","router.post(\"/\", middleware.isLoggedIn, function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var author = {","        id: req.user._id,","        username: req.user.username","    }","    var newCampground = {name: name, image: image, description: desc, author:author}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            //console.log(newlyCreated);","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","router.get(\"/new\", middleware.isLoggedIn, function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","router.get(\"/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","// EDIT CAMPGROUND ROUTE","router.get(\"/:id/edit\", middleware.checkCampgroundOwnership, function(req, res){","    Campground.findById(req.params.id, function(err, foundCampground){","        res.render(\"campgrounds/edit\", {campground: foundCampground});","    });","});","","// UPDATE CAMPGROUND ROUTE","router.put(\"/:id\",middleware.checkCampgroundOwnership, function(req, res){","    // find and update the correct campground","    Campground.findByIdAndUpdate(req.params.id, req.body.campground, function(err, updatedCampground){","       if(err){","           res.redirect(\"/campgrounds\");","       } else {","           //redirect somewhere(show page)","           res.redirect(\"/campgrounds/\" + req.params.id);","       }","    });","});","","// DESTROY CAMPGROUND ROUTE","router.delete(\"/:id\",middleware.checkCampgroundOwnership, function(req, res){","   Campground.findByIdAndRemove(req.params.id, function(err){","      if(err){","          res.redirect(\"/campgrounds\");","      } else {","          res.redirect(\"/campgrounds\");","      }","   });","});","","","module.exports = router;","",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":92,"column":24},"action":"insert","lines":["var express = require(\"express\");","var router  = express.Router();","var Campground = require(\"../models/campground\");","var middleware = require(\"../middleware\");","","","//INDEX - show all campgrounds","router.get(\"/\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","router.post(\"/\", middleware.isLoggedIn, function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var author = {","        id: req.user._id,","        username: req.user.username","    }","    var newCampground = {name: name, image: image, description: desc, author:author}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            console.log(newlyCreated);","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","router.get(\"/new\", middleware.isLoggedIn, function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","router.get(\"/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","// EDIT CAMPGROUND ROUTE","router.get(\"/:id/edit\", middleware.checkCampgroundOwnership, function(req, res){","    Campground.findById(req.params.id, function(err, foundCampground){","        res.render(\"campgrounds/edit\", {campground: foundCampground});","    });","});","","// UPDATE CAMPGROUND ROUTE","router.put(\"/:id\",middleware.checkCampgroundOwnership, function(req, res){","    // find and update the correct campground","    Campground.findByIdAndUpdate(req.params.id, req.body.campground, function(err, updatedCampground){","       if(err){","           res.redirect(\"/campgrounds\");","       } else {","           //redirect somewhere(show page)","           res.redirect(\"/campgrounds/\" + req.params.id);","       }","    });","});","","// DESTROY CAMPGROUND ROUTE","router.delete(\"/:id\",middleware.checkCampgroundOwnership, function(req, res){","   Campground.findByIdAndRemove(req.params.id, function(err){","      if(err){","          res.redirect(\"/campgrounds\");","      } else {","          res.redirect(\"/campgrounds\");","      }","   });","});","","","module.exports = router;"]}],[{"start":{"row":22,"column":31},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]},{"start":{"row":23,"column":4},"end":{"row":23,"column":5},"action":"insert","lines":["v"]},{"start":{"row":23,"column":5},"end":{"row":23,"column":6},"action":"insert","lines":["a"]},{"start":{"row":23,"column":6},"end":{"row":23,"column":7},"action":"insert","lines":["r"]}],[{"start":{"row":23,"column":7},"end":{"row":23,"column":8},"action":"insert","lines":[" "],"id":6},{"start":{"row":23,"column":8},"end":{"row":23,"column":9},"action":"insert","lines":["p"]},{"start":{"row":23,"column":9},"end":{"row":23,"column":10},"action":"insert","lines":["r"]},{"start":{"row":23,"column":10},"end":{"row":23,"column":11},"action":"insert","lines":["i"]},{"start":{"row":23,"column":11},"end":{"row":23,"column":12},"action":"insert","lines":["c"]},{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["e"]}],[{"start":{"row":23,"column":13},"end":{"row":23,"column":14},"action":"insert","lines":[" "],"id":7},{"start":{"row":23,"column":14},"end":{"row":23,"column":15},"action":"insert","lines":["="]}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":[" "],"id":8},{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["r"]},{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":["e"]}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"insert","lines":["q"],"id":9},{"start":{"row":23,"column":19},"end":{"row":23,"column":20},"action":"insert","lines":["."]},{"start":{"row":23,"column":20},"end":{"row":23,"column":21},"action":"insert","lines":["b"]},{"start":{"row":23,"column":21},"end":{"row":23,"column":22},"action":"insert","lines":["o"]},{"start":{"row":23,"column":22},"end":{"row":23,"column":23},"action":"insert","lines":["d"]},{"start":{"row":23,"column":23},"end":{"row":23,"column":24},"action":"insert","lines":["y"]},{"start":{"row":23,"column":24},"end":{"row":23,"column":25},"action":"insert","lines":["."]},{"start":{"row":23,"column":25},"end":{"row":23,"column":26},"action":"insert","lines":["r"]}],[{"start":{"row":23,"column":26},"end":{"row":23,"column":27},"action":"insert","lines":["p"],"id":10},{"start":{"row":23,"column":27},"end":{"row":23,"column":28},"action":"insert","lines":["i"]}],[{"start":{"row":23,"column":27},"end":{"row":23,"column":28},"action":"remove","lines":["i"],"id":11},{"start":{"row":23,"column":26},"end":{"row":23,"column":27},"action":"remove","lines":["p"]},{"start":{"row":23,"column":25},"end":{"row":23,"column":26},"action":"remove","lines":["r"]}],[{"start":{"row":23,"column":25},"end":{"row":23,"column":26},"action":"insert","lines":["p"],"id":12},{"start":{"row":23,"column":26},"end":{"row":23,"column":27},"action":"insert","lines":["r"]},{"start":{"row":23,"column":27},"end":{"row":23,"column":28},"action":"insert","lines":["i"]},{"start":{"row":23,"column":28},"end":{"row":23,"column":29},"action":"insert","lines":["c"]},{"start":{"row":23,"column":29},"end":{"row":23,"column":30},"action":"insert","lines":["e"]},{"start":{"row":23,"column":30},"end":{"row":23,"column":31},"action":"insert","lines":[","]}],[{"start":{"row":23,"column":30},"end":{"row":23,"column":31},"action":"remove","lines":[","],"id":13}],[{"start":{"row":23,"column":30},"end":{"row":23,"column":31},"action":"insert","lines":[";"],"id":14}],[{"start":{"row":29,"column":36},"end":{"row":29,"column":37},"action":"insert","lines":["p"],"id":15},{"start":{"row":29,"column":37},"end":{"row":29,"column":38},"action":"insert","lines":["r"]},{"start":{"row":29,"column":38},"end":{"row":29,"column":39},"action":"insert","lines":["i"]},{"start":{"row":29,"column":39},"end":{"row":29,"column":40},"action":"insert","lines":["c"]},{"start":{"row":29,"column":40},"end":{"row":29,"column":41},"action":"insert","lines":["e"]},{"start":{"row":29,"column":41},"end":{"row":29,"column":42},"action":"insert","lines":[":"]},{"start":{"row":29,"column":42},"end":{"row":29,"column":43},"action":"insert","lines":["p"]},{"start":{"row":29,"column":43},"end":{"row":29,"column":44},"action":"insert","lines":["r"]},{"start":{"row":29,"column":44},"end":{"row":29,"column":45},"action":"insert","lines":["i"]},{"start":{"row":29,"column":45},"end":{"row":29,"column":46},"action":"insert","lines":["c"]},{"start":{"row":29,"column":46},"end":{"row":29,"column":47},"action":"insert","lines":["e"]}],[{"start":{"row":29,"column":47},"end":{"row":29,"column":48},"action":"insert","lines":[","],"id":16}]]},"ace":{"folds":[],"scrolltop":203,"scrollleft":0,"selection":{"start":{"row":24,"column":36},"end":{"row":24,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1580719241278,"hash":"2e9e4b5979dba4b66d5432416d25fb6c95218b26"}